basePath: /api
definitions:
  entity.Movie:
    properties:
      detailsUrl:
        type: string
      originalTitle:
        type: string
      posterUrl:
        type: string
      russianTitle:
        type: string
      year:
        type: string
    type: object
  v1.doIndexMoviesRequest:
    properties:
      movies:
        items:
          $ref: '#/definitions/entity.Movie'
        type: array
    required:
    - movies
    type: object
info:
  contact: {}
  description: movie search and autocomplete
  title: AlexandrKudryavtsev/GoMovieSearch
  version: "1.0"
paths:
  /healthz:
    get:
      operationId: healthz
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Check server healthz
      tags:
      - common
  /movies/autocomplete:
    get:
      consumes:
      - application/json
      description: Get movie suggestions for autocomplete
      operationId: autocomplete-movies
      parameters:
      - description: Autocomplete query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'data: []entity.Movie'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Autocomplete movies
      tags:
      - movies
  /movies/index:
    post:
      consumes:
      - application/json
      description: Add or update movies in search index
      operationId: index-movies
      parameters:
      - description: Movies data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/v1.doIndexMoviesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Index movies
      tags:
      - movies
  /movies/search:
    get:
      consumes:
      - application/json
      description: Search movies by query
      operationId: search-movies
      parameters:
      - description: Search query
        in: query
        name: query
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'data: []entity.Movie'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Search movies
      tags:
      - movies
schemes:
- https
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
